FROM python:3.12-slim-bullseye AS base

ARG DEBIAN_FRONTEND=noninteractive
ARG PROJECT_DIR=django_powercrud
ARG USER=devuser
ARG USERHOME=/home/${USER}
ARG PROMPT_CODE='\n\[\e[0m\]🐳 \[\e[0m\][\[\e[0;38;5;226m\]$(git branch 2>/dev/null | grep '"'"'^*'"'"' | colrm 1 2)\[\e[0m\]] \[\e[0;91m\]\u\[\e[0m\]: \[\e[0;96m\]\w\n\[\e[0m\]\$\[\e[0m\] '

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100

# Install git, node.js and clean up
RUN apt-get update -y && \
    apt-get install --no-install-recommends -y curl git git-lfs openssh-client bsdmainutils && \
    apt-get install -y ca-certificates gnupg && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    apt-get update && \
    apt-get install -y nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# User setup (FROM YOUR WORKING VERSION)
RUN useradd -m -s /bin/bash --create-home ${USER} && \
    cd ${USERHOME} && mkdir .local && mkdir .local/bin && mkdir .local/scripts && mkdir ${USERHOME}/${PROJECT_DIR} && \
    chown -R ${USER}: ${USERHOME} && chown -R ${USER}: ${USERHOME}/${PROJECT_DIR} && \
    echo "export PATH=\"${USERHOME}/.local/bin:${USERHOME}/.local/scripts:\$PATH\"" >> ${USERHOME}/.bashrc && \
    echo "PS1='${PROMPT_CODE}'" >> /home/${USER}/.bashrc && \
    echo "cd ~/${PROJECT_DIR}" >> /home/${USER}/.bashrc && \
    echo "PROJECT_DIR=${PROJECT_DIR}" >> /root/.bashrc && \
    echo "PS1='${PROMPT_CODE}'" >> /root/.bashrc


WORKDIR ${USERHOME}/${PROJECT_DIR}

# Install node packages
COPY package*.json ./
RUN npm install && chown -R ${USER}:${USER} node_modules

# Install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | sh && \
    install -Dm755 /root/.local/bin/uv /usr/local/bin/uv && \
    install -Dm755 /root/.local/bin/uvx /usr/local/bin/uvx
ENV UV_PROJECT_ENVIRONMENT=/usr/local \
    PLAYWRIGHT_BROWSERS_PATH=/usr/local/ms-playwright
# Install Playwright package and browsers early so we avoid redownloading when dependencies change.
RUN uv pip install --system playwright && \
    uvx playwright install --with-deps
COPY pyproject.toml README.md ./
RUN uv sync --all-extras

USER ${USER}
COPY --chown=${USER}:${USER} . .

CMD ["/bin/bash"]
